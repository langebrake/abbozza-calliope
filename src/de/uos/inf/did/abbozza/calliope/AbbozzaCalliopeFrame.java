/**
 * @license abbozza!
 *
 * Copyright 2015 Michael Brinkmeier ( michael.brinkmeier@uni-osnabrueck.de )
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
/**
 * @fileoverview ... @author michael.brinkmeier@uni-osnabrueck.de (Michael
 * Brinkmeier)
 */
package de.uos.inf.did.abbozza.calliope;

import org.fife.ui.autocomplete.*;
import org.fife.ui.rtextarea.*;
import org.fife.ui.rsyntaxtextarea.*;
import de.uos.inf.did.abbozza.AbbozzaLocale;
import de.uos.inf.did.abbozza.AbbozzaLogger;
import de.uos.inf.did.abbozza.AbbozzaLoggerListener;
import de.uos.inf.did.abbozza.AbbozzaServer;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextPane;
/**
 *
 * @author mbrinkmeier
 */
public class AbbozzaCalliopeFrame  extends javax.swing.JFrame implements AbbozzaLoggerListener, AbbozzaCalliopeGUI {

    private PrintStream _console;
    private RTextScrollPane sourcePanel;
    private RSyntaxTextArea sourceArea;

    /**
     * Creates new form AbbozzaCalliopeFrame
     */
    public AbbozzaCalliopeFrame() {
        initComponents();
        
        sourceArea = new RSyntaxTextArea(20, 60);
        sourceArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_CPLUSPLUS);
        sourceArea.setCodeFoldingEnabled(true);        
        sourcePanel = new RTextScrollPane(sourceArea);
        this.jSplitPane1.setLeftComponent(sourcePanel);
        
        CompletionProvider provider = createCompletionProvider();
        AutoCompletion ac = new AutoCompletion(provider);
        ac.install(sourceArea);

        pack();
        
        AbbozzaLogger.addListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sourcePanel2 = new javax.swing.JScrollPane();
        sourceArea2 = new javax.swing.JTextArea();
        jSplitPane1 = new javax.swing.JSplitPane();
        logPanel = new javax.swing.JScrollPane();
        consoleArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        startBrowserItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        clearItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        settingsItem = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        quitItem = new javax.swing.JMenuItem();
        sketchMenu = new javax.swing.JMenu();
        compileMenuItem = new javax.swing.JMenuItem();
        uploadMenuItem = new javax.swing.JMenuItem();

        sourcePanel2.setMaximumSize(null);
        sourcePanel2.setRequestFocusEnabled(false);

        sourceArea2.setColumns(20);
        sourceArea2.setRows(5);
        sourcePanel2.setViewportView(sourceArea2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("abbozza! Calliope");

        jSplitPane1.setDividerLocation(300);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        consoleArea.setEditable(false);
        consoleArea.setColumns(20);
        consoleArea.setLineWrap(true);
        consoleArea.setRows(1);
        consoleArea.setWrapStyleWord(true);
        consoleArea.setMaximumSize(null);
        logPanel.setViewportView(consoleArea);

        jSplitPane1.setBottomComponent(logPanel);

        jMenu1.setText("abbozza!");

        startBrowserItem.setText(AbbozzaLocale.entry("gui.startBrowser"));
        startBrowserItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBrowserItemActionPerformed(evt);
            }
        });
        jMenu1.add(startBrowserItem);
        jMenu1.add(jSeparator2);

        clearItem.setText(AbbozzaLocale.entry("gui.clear"));
        clearItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearItemActionPerformed(evt);
            }
        });
        jMenu1.add(clearItem);
        jMenu1.add(jSeparator1);

        settingsItem.setText(AbbozzaLocale.entry("gui.settings"));
        settingsItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsItemActionPerformed(evt);
            }
        });
        jMenu1.add(settingsItem);
        jMenu1.add(jSeparator3);

        quitItem.setText(AbbozzaLocale.entry("gui.quit")
        );
        quitItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitItemActionPerformed(evt);
            }
        });
        jMenu1.add(quitItem);

        jMenuBar1.add(jMenu1);

        sketchMenu.setText(AbbozzaLocale.entry("gui.sketch_menu"));

        compileMenuItem.setText(AbbozzaLocale.entry("gui.compile"));
        compileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compileMenuItemActionPerformed(evt);
            }
        });
        sketchMenu.add(compileMenuItem);

        uploadMenuItem.setText(AbbozzaLocale.entry("gui.upload"));
        uploadMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadMenuItemActionPerformed(evt);
            }
        });
        sketchMenu.add(uploadMenuItem);

        jMenuBar1.add(sketchMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 814, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void quitItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitItemActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_quitItemActionPerformed

    private void clearItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearItemActionPerformed
        this.consoleArea.setText("");
    }//GEN-LAST:event_clearItemActionPerformed

    private void startBrowserItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBrowserItemActionPerformed
        System.out.println("Starting Browser");
        AbbozzaServer abbozza = AbbozzaServer.getInstance();
        abbozza.startBrowser(abbozza.getSystem()+".html");
    }//GEN-LAST:event_startBrowserItemActionPerformed

    private void compileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compileMenuItemActionPerformed
        AbbozzaServer abbozza = AbbozzaServer.getInstance();
        String response = abbozza.compileCode(this.sourceArea.getText());
        if ( response != null ) {
            if ( response.equals("")) {
                response = AbbozzaLocale.entry("gui.compilation_success");
            }
            this.consoleArea.setText(response);
        }
    }//GEN-LAST:event_compileMenuItemActionPerformed

    private void uploadMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadMenuItemActionPerformed
        AbbozzaServer abbozza = AbbozzaServer.getInstance();
        String response = abbozza.uploadCode(this.sourceArea.getText());
        if ( response != null ) {
            this.consoleArea.setText(response);
        }
    }//GEN-LAST:event_uploadMenuItemActionPerformed

    private void settingsItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsItemActionPerformed
        AbbozzaServer abbozza = AbbozzaServer.getInstance();
        abbozza.openConfigDialog();
    }//GEN-LAST:event_settingsItemActionPerformed

 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem clearItem;
    private javax.swing.JMenuItem compileMenuItem;
    private javax.swing.JTextArea consoleArea;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JScrollPane logPanel;
    private javax.swing.JMenuItem quitItem;
    private javax.swing.JMenuItem settingsItem;
    private javax.swing.JMenu sketchMenu;
    private javax.swing.JTextArea sourceArea2;
    private javax.swing.JScrollPane sourcePanel2;
    private javax.swing.JMenuItem startBrowserItem;
    private javax.swing.JMenuItem uploadMenuItem;
    // End of variables declaration//GEN-END:variables

    @Override
    public void logged(String msg) {
        this.consoleArea.append(msg + "\n");
    }
    
    public void setCode(String code) {
        this.sourceArea.setText(code);
    }

    @Override
    public void open() {
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - this.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - this.getHeight()) / 2);
        this.setLocation(x, y);
        this.setVisible(true);
        this.setState(JFrame.ICONIFIED);
    }
    
    /**
    * Create a simple provider that adds some calliope related completions.
    */
   private CompletionProvider createCompletionProvider() {
      AbbozzaServer abbozza = AbbozzaServer.getInstance();
      
      DefaultCompletionProvider provider = new DefaultCompletionProvider();
      try {
        InputStream autoCompleteXML = abbozza.getJarHandler().getInputStream("lib/" + abbozza.getSystem() + "_ac.xml");
        provider.loadFromXML(autoCompleteXML);  
      } catch (IOException ex) {
          AbbozzaLogger.err("Could not load autocomplete file: lib/" + abbozza.getSystem() + "_ac.xml");
      }
              
      return provider;

   }
}
